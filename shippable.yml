# Language setting
language: python

# Version number
python:
  - 2.7

build:
  ci:
    - python --version
    - echo "hello"


jobs:
  #- name: sample_jacoco_runCI
  #  type: runCI
  #  flags:
  #    - runShSample
  #  steps:
  #    - OUT: fake-image

  # - name: simple-mani-runShSample
  #  type: manifest
  #  flags:
  #    - runShSample
  #  steps:
  #    - IN: simple-image-runShSample
  #    - IN: myParams-runShSample
  #    #- IN: sample_python_runCI

  #- name: sample_python_runCI
  #  type: runCI
  #  flags:
  #    - runShSample
  #  steps:
  #    - OUT: simple-image-runShSample
  #    - OUT: myParams-runShSample

  - name: out-mani-runShSample
    type: manifest
    flags:
      - runShSample
    steps:
      - IN: simple-image-runShSample

  - name: test-mani-runShSample
    type: manifest
    flags:
      - runShSample
    steps:
      - IN: testOutImage-runShSample


  - name: simple-release-runShSample
    type: release
    flags:
      - runShSample
    steps:
      - IN: simple-mani-runShSample
      - IN: simple-version-runShSample
      - TASK: managed
        bump: patch

  - name: runShCheck-runShSample
    type: runSh
    flags:
      - runShSample
    steps:
      # - IN: azureConfig
      #   scopes:
      #     - aks
      #- IN: stagingTrigger-runShSample
      #- IN: simple-release-runShSample
      #- IN: gkeConfig-runShSample
      - IN: myRepo-runShSample
      - IN: nonum-DockerOpts-runShSample
      - IN: test-mani-runShSample
      - IN: myParams-runShSample
      - IN: 123-testDockerOpts-runShSample
      #- IN: test-docker-op
      #- OUT: testOutImage-runShSample
      #- IN: test-int-runShSample
      #- OUT: out-mani-runShSample
      - TASK:
        # - script: sudo apt-get install -y tree
        - script: which shipctl
        # - script: result=$(eval $action)
        # - script: echo "$result"
        - script: echo "$NVM_DIR"
        # - script: tree /build
        - script: printenv
        - script: ls -al /build/IN/test-mani-runShSample/manifest
        - script: shipctl copy_resource_file_from_state test-mani-runShSample manifests.json $PWD
        - script: echo "$(shipctl get_resource_env job name)"
        - script: echo "$(shipctl get_resource_env job triggered_by_nAmE)"
        - script: echo "$(shipctl get_resource_env test-mani-runShSample name)"
        - script: echo "$(shipctl get_resource_env myRepo-runShSample commit)"
        - script: echo "$(shipctl get_resource_env myRepo-runShSample commit_MESSAGE)"
        - script: echo "$(shipctl get_resource_env myRepo-runShSample ssh_url)"
        - script: echo "manifest sha... $(shipctl get_resource_version_key test-mani-runShSample sha)"
        - script: ls -a $PWD
        - script: sleep 15
        - script: . /tmp/test.sh
        # - script: kubectl version
        # - script: aws --version
        - script: az --debug --version
        - script: az help || true
        #- script: kubectl get namespaces
        # - script: mkdir -p /root/.kube/
        # - script: eval echo -e $(cat $TESTINTRUNSHSAMPLE_META/integration.json | jq '.masterKubeConfigContent')
        # - script: echo -e "\nspacer\n"
        # - script: eval echo -e $(cat $TESTINTRUNSHSAMPLE_META/integration.json | jq '.masterKubeConfigContent') > /root/.kube/config
        # - script: echo "=============THE CONFIG FILE:"
        # - script: cat /root/.kube/config
        # #- script: echo -e $TESTINTRUNSHSAMPLE_INTEGRATION_MASTERKUBECONFIGCONTENT
        # #- script: echo -e $TESTINTRUNSHSAMPLE_INTEGRATION_MASTERKUBECONFIGCONTENT > /root/.kube/config
        # #- script: cat /root/.kube/config
        # - script: kubectl version
        # - script: echo "resource ID is $RESOURCE_ID"
        - script: echo "versionName=$BUILD_NUMBER" > /build/state/testOutImage-runShSample.env
        # - script: echo "versionName=$BUILD_NUMBER" > /build/state/runShCheck-runShSample.env
        - script: echo "extraProperty=$JOB_NAME" >> /build/state/testOutImage-runShSample.env
        # - script: sudo docker images
        # - script: sudo docker ps
        # - script: sudo apt-get install -y jq
        # - script: ls -latr /build/state
        # - script: cat /build/state/testOutImage-runShSample.env
        # - script: which envsubst
        # - script: cat /build/state/runShCheck-runShSample.env
        # #- script: ls -latr /build/IN/simple-release-runShSample/release
        # #- script: cat $RUNSHCHECKRUNSHSAMPLE_PATH/message.json | jq '.'
        - script: ls -latr OUT/myParams-runShSample
        - script: echo "my subshell result is- $SHIPPABLE_API_URL"
        #- script: cat $MYPARAMSRUNSHSAMPLE_PATH/params
        - script: cat $MYPARAMSRUNSHSAMPLE_PATH/version.json | jq '.'
        - script: echo "newParam=blahblahblah" >> state/$MYPARAMSRUNSHSAMPLE_NAME.env
        # - script: cat IN/test-docker-op/version.json | jq '.'
        # - script: 'echo "ssh keyfile location is: $MY_SSH_KEYPATH"'
        # - script: 'echo "pem keyfile location is: $MY_PEM_KEYPATH"'
        # - script: ls -a $MY_SSH_PATH
        # - script: ls -a $MY_PEM_PATH
        # - script: ssh-add $MY_SSH_KEYPATH

    on_failure:
      - script: echo "something failed"
    on_success:
      - script: echo "yay it worked"


resources:
  - name: 123-testDockerOpts-runShSample
    type: dockerOptions
    flags:
      - runShSample
    versionTemplate:
      foo: "bar"
  - name: nonum-DockerOpts-runShSample
    type: dockerOptions
    flags:
      - runShSample
    versionTemplate:
      fizz: "buzz"

  - name: testOutImage-runShSample
    type: image
    flags:
      - runShSample
    pointer:
      sourceName: "trriplejay/msgbase"
      region: us-east-1
    seed:
      versionName: "latest"

  - name: simple-version-runShSample
    type: version
    flags:
      - runShSample
    seed:
      versionName: 1.0.0

  # - name: azureConfig
  #   type: cliConfig
  #   integration: myAzureCreds
  #   pointer:
  #     groupName: testKube
  #     clusterName: blah-cluster

  - name: gkeConfig-runShSample
    type: cliConfig
    integration: MyGkeCredentials
    versionTemplate:
      clusterName: cluster-1
      region: us-central1-f

  - name: test-docker-op
    type: dockerOptions
    flags:
      - runShSample
    version:
      cpuShares: 5
      memory: 300

  - name: myParams-runShSample
    type: params
    flags:
      - runShSample
    version:
      params:
        hello: world
        test: 123
        action: "$(echo $SHIPPABLE_API_URL)"
        testParam: $(eval touch testParams.txt)
#        secure: A3OCCNyoIqC05NyP9Gy4Edq7bi8TC2KIav7/wlkNEJov0WHs90miT72rXwaiq5ExCQ28hgQ6uHxCOqihCVznwZylq5khHgN2zEPZuTvzF2KrzVzTu69XaDSlKgGuvMdNnAcnH4BOivqzwBWO2yJnmf4Wi5UpS1OLKziYH5akvHqswqEO/+A8cdUYnKaYvTLMALYGI4WeKZrng8Ry9LXjRN2WEDkkRmHZgpxFBrmVbAxGScrpnsOs7lpPoBibQ9fHOq5DgOtiqVFqXc55rZRI0q0ZKJwzSmxdTkp7pJuT+WJ7BfJQpcHObjnL0C0QuKyKKg2eLZ/QDwce3pctZUHBSA==

  - name: simple-image-runShSample
    type: image
    flags:
      - runShSample
    pointer:
      sourceName: "trriplejay/simpleserver"
    seed:
      versionName: "master.58"

  - name: myRepo-runShSample
    type: gitRepo
    flags:
      - runShSample
    integration: "github"
    pointer:
      sourceName: trriplejay/simpleserver
      branch: master
      testKey: $(eval touch testRepo.txt)

  # - name: test-int-runShSample
  #   type: integration
  #   integration: MyKubeCredentials


  - name: stagingTrigger-runShSample
    type: trigger
    flags:
      - runShSample
    version:
      message: 'trigger runShSteps: 1'

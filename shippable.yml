use-shipctl-master: &masterShipctl
  - pushd /tmp
  - git clone https://github.com/trriplejay/node.git
  - ./node/shipctl/$SHIPPABLE_NODE_ARCHITECTURE/$SHIPPABLE_NODE_OPERATING_SYSTEM/install.sh
  - popd


resources:
  - name: stateA
    type: state

  - name: stateB
    type: state

  - name: stateRepo
    type: gitRepo
    integration: github
    versionTemplate:
      branch: state
      sourceName: trriplejay/sample_pipelines


jobs:
  - name: setupJob
    type: runSh
    steps:
      - TASK:
          script:
            - shipctl put_resource_state stateA foo bar
            - if [ -n "$CUSTOM" ]; then shipctl put_resource_state stateA custom "$CUSTOM"; fi
            - echo "testing 1..2..3" > test.txt
            - shipctl copy_file_to_resource_state test.txt stateA
      - OUT: stateA

  - name: testState1
    type: runSh
    steps:
      - IN: setupJob
      - IN: stateRepo
        switch: off
      - IN: stateA
        switch: off
      - OUT: stateA
      - OUT: stateB
      - TASK:
          script:
            - sudo apt-get update
            - sudo apt-get install -y tree
            - *masterShipctl
            ## stateA stuff
            - tree /build/IN/stateA/state #because it is IN and OUT
            - shipctl replicate stateA stateA --no-files
            - tree $STATEA_STATE
            ## stateB stuff
            - tree $STATEB_STATE
            - shipctl replicate stateA stateB
            - tree $STATEB_STATE

  - name: testState2
    dependencyMode: strict
    type: runSh
    steps:
      - IN: stateB
      - IN: stateA
      - IN: testState1
      - TASK:
          name: stateA-details
          script:
            - echo "------------------ file list"
            - ls -latr $(shipctl get_resource_state stateA)
            - echo "------------------ version contents"
            - cat $(shipctl get_resource_meta stateA)/version.json | jq '.version'
      - TASK:
          name: stateB-details
          script:
            - echo "------------------ file list"
            - ls -latr $(shipctl get_resource_state stateB)
            - echo "------------------ version contents"
            - cat $(shipctl get_resource_meta stateB)/version.json | jq '.version'

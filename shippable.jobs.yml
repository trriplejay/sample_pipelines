jobs:
  #- name: sample_jacoco_runCI
  #  type: runCI
  #  flags:
  #    - runShSample
  #  steps:
  #    - OUT: fake-image

  # - name: simple-mani-runShSample
  #  type: manifest
  #  flags:
  #    - runShSample
  #  steps:
  #    - IN: simple-image-runShSample
  #    - IN: myParams-runShSample
  #    #- IN: sample_python_runCI

  #- name: sample_python_runCI
  #  type: runCI
  #  flags:
  #    - runShSample
  #  steps:
  #    - OUT: simple-image-runShSample
  #    - OUT: myParams-runShSample

  - name: out-mani-runShSample
    type: manifest
    flags:
      - runShSample
    steps:
      - IN: simple-image-runShSample

  - name: test-mani-runShSample
    type: manifest
    flags:
      - runShSample
    steps:
      - IN: testOutImage-runShSample


  - name: simple-release-runShSample
    type: release
    flags:
      - runShSample
    steps:
      - IN: simple-mani-runShSample
      - IN: simple-version-runShSample
      - TASK: managed
        bump: patch

  - name: runShCheck-runShSample
    type: runSh
    flags:
      - runShSample
    steps:
      # - IN: azureConfig
      #   scopes:
      #     - aks
      #- IN: stagingTrigger-runShSample
      #- IN: simple-release-runShSample
      #- IN: myRepo-runShSample
      - IN: test-mani-runShSample
      - OUT: myParams-runShSample
      #- IN: test-docker-op
      #- OUT: testOutImage-runShSample
      #- IN: test-int-runShSample
      #- OUT: out-mani-runShSample
      - TASK:
        - script: which shipctl
        - script: ls -al /build/IN/test-mani-runShSample/manifest
        - script: shipctl copy_resource_file_from_state test-mani-runShSample manifests.json $PWD
        - script: ls -a $PWD
        # - script: kubectl version
        #- script: az --version
        #- script: kubectl get namespaces
        # - script: mkdir -p /root/.kube/
        # - script: eval echo -e $(cat $TESTINTRUNSHSAMPLE_META/integration.json | jq '.masterKubeConfigContent')
        # - script: echo -e "\nspacer\n"
        # - script: eval echo -e $(cat $TESTINTRUNSHSAMPLE_META/integration.json | jq '.masterKubeConfigContent') > /root/.kube/config
        # - script: echo "=============THE CONFIG FILE:"
        # - script: cat /root/.kube/config
        # #- script: echo -e $TESTINTRUNSHSAMPLE_INTEGRATION_MASTERKUBECONFIGCONTENT
        # #- script: echo -e $TESTINTRUNSHSAMPLE_INTEGRATION_MASTERKUBECONFIGCONTENT > /root/.kube/config
        # #- script: cat /root/.kube/config
        # - script: kubectl version
        # - script: echo "resource ID is $RESOURCE_ID"
        - script: echo "versionName=$BUILD_NUMBER" > /build/state/testOutImage-runShSample.env
        # - script: echo "versionName=$BUILD_NUMBER" > /build/state/runShCheck-runShSample.env
        - script: echo "extraProperty=$JOB_NAME" >> /build/state/testOutImage-runShSample.env
        # - script: sudo docker images
        # - script: sudo docker ps
        # - script: sudo apt-get install -y jq
        # - script: ls -latr /build/state
        # - script: cat /build/state/testOutImage-runShSample.env
        # - script: which envsubst
        # - script: cat /build/state/runShCheck-runShSample.env
        # #- script: ls -latr /build/IN/simple-release-runShSample/release
        # #- script: cat $RUNSHCHECKRUNSHSAMPLE_PATH/message.json | jq '.'
        - script: ls -latr OUT/myParams-runShSample
        - script: echo "my subshell result is- $SHIPPABLE_API_URL"
        #- script: cat $MYPARAMSRUNSHSAMPLE_PATH/params
        - script: cat $MYPARAMSRUNSHSAMPLE_PATH/version.json | jq '.'
        - script: echo "newParam=blahblahblah" >> state/$MYPARAMSRUNSHSAMPLE_NAME.env
        # - script: cat IN/test-docker-op/version.json | jq '.'
        # - script: 'echo "ssh keyfile location is: $MY_SSH_KEYPATH"'
        # - script: 'echo "pem keyfile location is: $MY_PEM_KEYPATH"'
        # - script: ls -a $MY_SSH_PATH
        # - script: ls -a $MY_PEM_PATH
        # - script: ssh-add $MY_SSH_KEYPATH

    on_failure:
      - script: echo "something failed"
    on_success:
      - script: echo "yay it worked"
